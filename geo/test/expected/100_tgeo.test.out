SELECT asText(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2012-01-01 08:00:00');
                        astext                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2012-01-01 08:00:00+00
(1 row)

SELECT asText(tgeometry '  Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2012-01-01 08:00:00  ');
                        astext                         
-------------------------------------------------------
 POLYGON((0 0,2 0,2 2,0 2,0 0))@2012-01-01 08:00:00+00
(1 row)

SELECT asText(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2012-01-01 08:00:00');
                        astext                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2012-01-01 08:00:00+00
(1 row)

SELECT asText(tgeography '  Polygon((0 0, 2 0, 2 2, 0 2, 0 0)) @ 2012-01-01 08:00:00  ');
                        astext                         
-------------------------------------------------------
 POLYGON((0 0,2 0,2 2,0 2,0 0))@2012-01-01 08:00:00+00
(1 row)

/* Errors */
SELECT tgeometry 'TRUE@2012-01-01 08:00:00';
ERROR:  parse error - invalid geometry
LINE 2: SELECT tgeometry 'TRUE@2012-01-01 08:00:00';
                         ^
HINT:  "TR" <-- parse error at position 2 within geometry
SELECT tgeography 'ABC@2012-01-01 08:00:00';
ERROR:  parse error - invalid geometry
LINE 1: SELECT tgeography 'ABC@2012-01-01 08:00:00';
                          ^
HINT:  "AB" <-- parse error at position 2 within geometry
SELECT tgeometry 'Polygon empty@2000-01-01 00:00:00+01';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry 'Polygon empty@2000-01-01 00:00:00+01';
                         ^
SELECT tgeography 'Polygon empty@2000-01-01 00:00:00+01';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography 'Polygon empty@2000-01-01 00:00:00+01';
                          ^
SELECT tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01 00:00:00+01 ,';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01...
                         ^
SELECT tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01 00:00:00+01 ,';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-0...
                          ^
SELECT asText(tgeometry ' { Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 } ');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00}
(1 row)

SELECT asText(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00}');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00}
(1 row)

SELECT asText(tgeography ' { Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 } ');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00}
(1 row)

SELECT asText(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00}');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00}
(1 row)

/* Errors */
SELECT asText(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}');
ERROR:  All regions must be congruent
LINE 2: SELECT asText(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))...
                                ^
SELECT asText(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}');
ERROR:  All regions must be congruent
LINE 1: SELECT asText(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0)...
                                 ^
SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon empty@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon empty@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0 0, 2 0 0, 2 2 0, 0 2 0, 0 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0 0, 2 0 0, 2 2 0, 0 2 0, 0 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00} xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00} xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT asText(tgeometry ' [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 ] ');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00]
(1 row)

SELECT asText(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00]
(1 row)

SELECT asText(tgeography ' [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 ] ');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00]
(1 row)

SELECT asText(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]');
                                                                                astext                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00]
(1 row)

/* Errors */
SELECT asText(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]');
ERROR:  All regions must be congruent
LINE 2: SELECT asText(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))...
                                ^
SELECT asText(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]');
ERROR:  All regions must be congruent
LINE 1: SELECT asText(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0)...
                                 ^
SELECT asText(tgeometry '[Polygon((0 0 0, 1 0 0, 1 1 0, 0 1 0, 0 0 0))@2001-01-01, Polygon((0 0 0, 2 0 0, 2 2 0, 0 2 0, 0 0 0))@2001-01-02, Polygon((0 0 0, 3 0 0, 3 3 0, 0 3 0, 0 0 0))@2001-01-03]');
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT asText(tgeometry '[Polygon((0 0 0, 1 0 0, 1 1 0, 0 1 ...
                                ^
SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon empty@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon empty@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0 0, 2 0 0, 2 2 0, 0 2 0, 0 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0 0, 2 0 0, 2 2 0, 0 2 0, 0 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00]';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00}';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00] xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-0...
                         ^
SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00] xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                          ^
SELECT asText(tgeometry '  { [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 ],
 [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 09:05:00 , Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00 ] } ');
                                                                                                                                                                     astext                                                                                                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 09:05:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:06:00+00]}
(1 row)

SELECT asText(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 09:05:00,Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}');
                                                                                                                                                                     astext                                                                                                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 09:05:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:06:00+00]}
(1 row)

SELECT asText(tgeography '  { [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00 , Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00 ],
 [ Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00 , Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 09:05:00 , Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00 ] } ');
                                                                                                                                                                     astext                                                                                                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 09:05:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:06:00+00]}
(1 row)

SELECT asText(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00,Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 09:05:00,Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}');
                                                                                                                                                                     astext                                                                                                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 08:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 08:05:00+00, POLYGON((1 1,0 1,0 0,1 0,1 1))@2001-01-01 08:06:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:00:00+00, POLYGON((1 0,1 1,0 1,0 0,1 0))@2001-01-01 09:05:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2001-01-01 09:06:00+00]}
(1 row)

/* Errors */
SELECT asText(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 09:05:00,Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}');
ERROR:  All regions must be congruent
LINE 2: SELECT asText(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0)...
                                ^
SELECT asText(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 08:05:00,Polygon((0 0, 3 0, 3 3, 0 3, 0 0))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00,Polygon((0 0, 2 0, 2 2, 0 2, 0 0))@2001-01-01 09:05:00,Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}');
ERROR:  All regions must be congruent
LINE 1: SELECT asText(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0...
                                 ^
SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00, Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00, Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00, Polygon empty@2001-01-01 09:05:00, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                         ^
SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00, Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00, Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00],
 [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:00:00, Polygon empty@2001-01-01 09:05:00, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 09:06:00]}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001...
                          ^
SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((0 0 0, 1 0 0, 1 1 0, 0 1 0, 0 0 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                         ^
SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((0 0 0, 1 0 0, 1 1 0, 0 1 0, 0 0 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]}';
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001...
                          ^
SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                         ^
SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001...
                          ^
SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]} xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-...
                         ^
SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001-01-01 08:00:00],[Polygon((1 0, 1 1, 0 1, 0 0, 1 0))@2001-01-01 08:05:00,Polygon((1 1, 0 1, 0 0, 1 0, 1 1))@2001-01-01 08:06:00]} xxx';
ERROR:  Could not parse temporal value
LINE 1: SELECT tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2001...
                          ^
SELECT asewkt(tgeometry 'SRID=4326;[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry '[SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry '[SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, SRID=4326;Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeography 'SRID=4326;[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeography '[SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeography '[SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, SRID=4326;Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT format_type(oid, -1) FROM (SELECT oid FROM pg_type WHERE typname = 'tgeometry') t;
 format_type 
-------------
 tgeometry
(1 row)

SELECT format_type(oid, tgeometry_typmod_in(ARRAY[cstring 'Instant','Polygon','5676']))
FROM (SELECT oid FROM pg_type WHERE typname = 'tgeometry') t;
           format_type           
---------------------------------
 tgeometry(Instant,Polygon,5676)
(1 row)

/* Errors */
SELECT tgeometry_typmod_in(ARRAY[cstring 'Instant', NULL,'5676']);
ERROR:  typmod array must not contain nulls
SELECT tgeometry_typmod_in(ARRAY[[cstring 'Instant'],[cstring 'Polygon'],[cstring '5676']]);
ERROR:  typmod array must be one-dimensional
SELECT asewkt(tgeometry(Instant) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                        asewkt                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometry(Instant, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                        asewkt                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometry(Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                        asewkt                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometry(Polygon, 4326) 'SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometry(Instant, Polygon, 4326) 'SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeography(Polygon,4326) 'SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeography(Instant,Polygon,4326) 'SRID=4326;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometry(InstantSet) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
                                                     asewkt                                                     
----------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00}
(1 row)

SELECT asewkt(tgeometry(InstantSet, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
                                                     asewkt                                                     
----------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00}
(1 row)

SELECT asewkt(tgeometry(Polygon, 4326) 'SRID=4326;{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00}
(1 row)

SELECT asewkt(tgeometry(InstantSet, Polygon, 4326) 'SRID=4326;{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00}
(1 row)

SELECT asewkt(tgeometry(Sequence) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                     asewkt                                                     
----------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry(Sequence, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                     asewkt                                                     
----------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry(Polygon, 4326) 'SRID=4326;[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry(Sequence, Polygon, 4326) 'SRID=4326;[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeometry(SequenceSet) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02], [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
                                                                                                              asewkt                                                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-04 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometry(SequenceSet, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02], [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
                                                                                                              asewkt                                                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-04 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometry(Polygon, 4326) 'SRID=4326;{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02], [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
                                                                                                                   asewkt                                                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-04 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometry(SequenceSet, Polygon, 4326) 'SRID=4326;{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02], [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
                                                                                                                   asewkt                                                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-04 00:00:00+00]}
(1 row)

/* Errors */
SELECT tgeometry(Instant,Polygon,5676,1234) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Invalid temporal linestring or polygon type modifier:
LINE 2: SELECT tgeometry(Instant,Polygon,5676,1234) 'SRID=5676;Polyg...
               ^
SELECT tgeometry(Instan,Polygon,5676) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Invalid duration type modifier: instan
LINE 1: SELECT tgeometry(Instan,Polygon,5676) 'SRID=5676;Polygon((0 ...
               ^
SELECT tgeometry(Instant,PolygonZZ,5676) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Invalid geometry type modifier: polygonzz
LINE 1: SELECT tgeometry(Instant,PolygonZZ,5676) 'SRID=5676;Polygon(...
               ^
SELECT tgeometry(Instant,Point,5676) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(Instant,Point,5676) 'SRID=5676;Polygon((0 0...
               ^
SELECT tgeometry(PolygonZ,5676) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(PolygonZ,5676) 'SRID=5676;Polygon((0 0, 1 0...
               ^
SELECT tgeometry(Point,5676) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(Point,5676) 'SRID=5676;Polygon((0 0, 1 0, 1...
               ^
SELECT tgeometry(Instant,PolygonZ) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(Instant,PolygonZ) 'SRID=5676;Polygon((0 0, ...
               ^
SELECT tgeometry(Instant,Point) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(Instant,Point) 'SRID=5676;Polygon((0 0, 1 0...
               ^
SELECT tgeometry(PolygonZ) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(PolygonZ) 'SRID=5676;Polygon((0 0, 1 0, 1 1...
               ^
SELECT tgeometry(Point) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01';
ERROR:  Only polygon geometries without Z or M dimension accepted
LINE 1: SELECT tgeometry(Point) 'SRID=5676;Polygon((0 0, 1 0, 1 1, 0...
               ^
SELECT tgeometry(1, 2) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-02}';
ERROR:  Invalid temporal polygon type modifier: 1
LINE 1: SELECT tgeometry(1, 2) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@...
               ^
/* Errors */
SELECT asewkt(tgeometry(Instant, Polygon, 4326) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal geo SRID (0) does not match column SRID (4326)
SELECT asewkt(tgeometry(Instant, Polygon, 4326) 'SRID=5434;Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal geo SRID (5434) does not match column SRID (4326)
SELECT asewkt(tgeometry(InstantSet, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (InstantSet)
SELECT asewkt(tgeometry(Sequence, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (Sequence)
SELECT asewkt(tgeometry(SequenceSet, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeometry(Instant, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (Instant)
SELECT asewkt(tgeometry(InstantSet, Polygon, 4326) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal geo SRID (0) does not match column SRID (4326)
SELECT asewkt(tgeometry(InstantSet, Polygon, 4326) 'SRID=5434;{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal geo SRID (5434) does not match column SRID (4326)
SELECT asewkt(tgeometry(Sequence, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (Sequence)
SELECT asewkt(tgeometry(SequenceSet, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeometry(Instant, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (Instant)
SELECT asewkt(tgeometry(InstantSet, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (InstantSet)
SELECT asewkt(tgeometry(Sequence, Polygon, 4326) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal geo SRID (0) does not match column SRID (4326)
SELECT asewkt(tgeometry(Sequence, Polygon, 4326) 'SRID=5434;[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal geo SRID (5434) does not match column SRID (4326)
SELECT asewkt(tgeometry(SequenceSet, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeometry(Instant, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (Instant)
SELECT asewkt(tgeometry(InstantSet, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (InstantSet)
SELECT asewkt(tgeometry(Sequence, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (Sequence)
SELECT asewkt(tgeometry(SequenceSet, Polygon, 4326) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal geo SRID (0) does not match column SRID (4326)
SELECT asewkt(tgeometry(SequenceSet, Polygon, 4326) 'SRID=5434;{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal geo SRID (5434) does not match column SRID (4326)
SELECT asewkt(tgeography(Instant, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeography(InstantSet, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00}
(1 row)

SELECT asewkt(tgeography(Sequence, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
                                                          asewkt                                                          
--------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00]
(1 row)

SELECT asewkt(tgeography(SequenceSet, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
                                                                                                                   asewkt                                                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-04 00:00:00+00]}
(1 row)

/* Errors */
SELECT asewkt(tgeography(InstantSet, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (InstantSet)
SELECT asewkt(tgeography(Sequence, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (Sequence)
SELECT asewkt(tgeography(SequenceSet, Polygon) 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
ERROR:  Temporal type (Instant) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeography(Instant, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (Instant)
SELECT asewkt(tgeography(Sequence, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (Sequence)
SELECT asewkt(tgeography(SequenceSet, Polygon) '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02}');
ERROR:  Temporal type (InstantSet) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeography(Instant, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (Instant)
SELECT asewkt(tgeography(InstantSet, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (InstantSet)
SELECT asewkt(tgeography(SequenceSet, Polygon) '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02]');
ERROR:  Temporal type (Sequence) does not match column type (SequenceSet)
/* Errors */
SELECT asewkt(tgeography(Instant, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (Instant)
SELECT asewkt(tgeography(InstantSet, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (InstantSet)
SELECT asewkt(tgeography(Sequence, Polygon) '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02],
    [Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-04]}');
ERROR:  Temporal type (SequenceSet) does not match column type (Sequence)
SELECT asewkt(tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'));
                      asewkt                       
---------------------------------------------------
 POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00
(1 row)

SELECT asewkt(tgeometryinst(NULL, '2012-01-01 08:00:00'));
 asewkt 
--------
 
(1 row)

SELECT asewkt(tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'));
                           asewkt                            
-------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00
(1 row)

SELECT asewkt(tgeographyinst(NULL, '2012-01-01 08:00:00'));
 asewkt 
--------
 
(1 row)

/* Errors */
SELECT asewkt(tgeometryinst(geometry 'polygon empty', timestamptz '2000-01-01'));
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
SELECT asewkt(tgeographyinst(geography 'polygon empty', timestamptz '2000-01-01'));
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
SELECT asewkt(tgeometryi(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
                                                                          asewkt                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00}
(1 row)

SELECT asewkt(tgeographyi(ARRAY[
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeographyinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
                                                                               asewkt                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00}
(1 row)

/* Errors */
SELECT asewkt(tgeometryi(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 1 1, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  Corresponding rings in each region must contain the same number of points
SELECT asewkt(tgeometryi(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0 0, 1 0 0, 0 1 0, 0 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
SELECT asewkt(tgeometryi(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 2 0, 0 2, 0 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  All regions must be congruent
SELECT asewkt(tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
                                                                          asewkt                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00]
(1 row)

SELECT asewkt(tgeographyseq(ARRAY[
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeographyinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
                                                                               asewkt                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00]
(1 row)

/* Errors */
SELECT asewkt(tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 1 1, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  Corresponding rings in each region must contain the same number of points
SELECT asewkt(tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0 0, 1 0 0, 0 1 0, 0 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
SELECT asewkt(tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 2 0, 0 2, 0 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]));
ERROR:  All regions must be congruent
SELECT asewkt(tgeometrys(ARRAY[
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 09:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:20:00')
])]));
                                                                                                                                                         asewkt                                                                                                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00], [POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 09:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 09:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 09:20:00+00]}
(1 row)

SELECT asewkt(tgeometrys(ARRAY[
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:30:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:40:00')
], FALSE, TRUE)]));
ERROR:  Unknown geometry type: 0 - Unknown
SELECT asewkt(tgeographys(ARRAY[
tgeographyseq(ARRAY[
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeographyinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeographyseq(ARRAY[
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:00:00'),
tgeographyinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 09:10:00'),
tgeographyinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:20:00')
])]));
                                                                                                                                                              asewkt                                                                                                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 08:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 08:20:00+00], [POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 09:00:00+00, POLYGON((1 0,2 0,1 1,1 0))@2012-01-01 09:10:00+00, POLYGON((0 0,1 0,0 1,0 0))@2012-01-01 09:20:00+00]}
(1 row)

/* Errors */
SELECT asewkt(tgeometrys(ARRAY[
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 1 1, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 1 1, 0 1, 0 0)'::geometry), '2012-01-01 09:20:00')
])]));
ERROR:  Corresponding rings in each region must contain the same number of points
SELECT asewkt(tgeometrys(ARRAY[
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0 0, 1 0 0, 0 1 0, 0 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 09:00:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0 0, 1 0 0, 0 1 0, 0 0 0)'::geometry), '2012-01-01 09:20:00')
])]));
ERROR:  Only non-empty polygon geometries without Z or M dimension accepted
SELECT asewkt(tgeometrys(ARRAY[
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 2 0, 1 1, 1 0)'::geometry), '2012-01-01 08:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 1 0, 0 1, 0 0)'::geometry), '2012-01-01 08:20:00')
]),
tgeometryseq(ARRAY[
tgeometryinst(ST_MakePolygon('LineString(0 0, 2 0, 0 2, 0 0)'::geometry), '2012-01-01 09:00:00'),
tgeometryinst(ST_MakePolygon('LineString(1 0, 3 0, 1 2, 1 0)'::geometry), '2012-01-01 09:10:00'),
tgeometryinst(ST_MakePolygon('LineString(0 0, 2 0, 0 2, 0 0)'::geometry), '2012-01-01 09:20:00')
])]));
ERROR:  All regions must be congruent
SELECT period(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-01 00:00:00+00]
(1 row)

SELECT period(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-03 00:00:00+00]
(1 row)

SELECT period(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-03 00:00:00+00]
(1 row)

SELECT period(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-05 00:00:00+00]
(1 row)

SELECT period(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-01 00:00:00+00]
(1 row)

SELECT period(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-03 00:00:00+00]
(1 row)

SELECT period(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-03 00:00:00+00]
(1 row)

SELECT period(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}');
                      period                      
--------------------------------------------------
 [2000-01-01 00:00:00+00, 2000-01-05 00:00:00+00]
(1 row)

SELECT asewkt(tgeometryinst(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                        asewkt                         
-------------------------------------------------------
 POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeometryi(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                         asewkt                          
---------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00}
(1 row)

SELECT asewkt(tgeometryi(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
                                                                                asewkt                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00}
(1 row)

SELECT asewkt(tgeometryseq(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                         asewkt                          
---------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00]
(1 row)

SELECT asewkt(tgeometryseq(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
                                                                                asewkt                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]
(1 row)

SELECT asewkt(tgeometrys(tgeometry 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                          asewkt                           
-----------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometrys(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
                                                                                   asewkt                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00], [POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometrys(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
                                                                                 asewkt                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]}
(1 row)

SELECT asewkt(tgeometrys(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
                                                                                                                                         asewkt                                                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00], [POLYGON((4 3,4 4,3 4,3 3,4 3))@2000-01-04 00:00:00+00, POLYGON((4 3,4 4,3 4,3 3,4 3))@2000-01-05 00:00:00+00]}
(1 row)

/* Errors */
SELECT asewkt(tgeometryinst(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeometryinst(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeometryinst(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeometryi(tgeometry '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
ERROR:  Cannot transform input to a temporal instant set
SELECT asewkt(tgeometryi(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal instant set
SELECT asewkt(tgeometryseq(tgeometry '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
ERROR:  Cannot transform input to a temporal sequence
SELECT asewkt(tgeometryseq(tgeometry '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal sequence
SELECT asewkt(tgeographyinst(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                             asewkt                              
-----------------------------------------------------------------
 SRID=4326;POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00
(1 row)

SELECT asewkt(tgeographyi(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                              asewkt                               
-------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00}
(1 row)

SELECT asewkt(tgeographyi(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
                                                                                     asewkt                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00}
(1 row)

SELECT asewkt(tgeographyseq(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                              asewkt                               
-------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00]
(1 row)

SELECT asewkt(tgeographyseq(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
                                                                                     asewkt                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]
(1 row)

SELECT asewkt(tgeographys(tgeography 'Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01'));
                               asewkt                                
---------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00]}
(1 row)

SELECT asewkt(tgeographys(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
                                                                                        asewkt                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00], [POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00], [POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]}
(1 row)

SELECT asewkt(tgeographys(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
                                                                                      asewkt                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00]}
(1 row)

SELECT asewkt(tgeographys(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
                                                                                                                                              asewkt                                                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 SRID=4326;{[POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-01 00:00:00+00, POLYGON((5 5,6 5,6 6,5 6,5 5))@2000-01-02 00:00:00+00, POLYGON((0 0,1 0,1 1,0 1,0 0))@2000-01-03 00:00:00+00], [POLYGON((4 3,4 4,3 4,3 3,4 3))@2000-01-04 00:00:00+00, POLYGON((4 3,4 4,3 4,3 3,4 3))@2000-01-05 00:00:00+00]}
(1 row)

/* Errors */
SELECT asewkt(tgeographyinst(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeographyinst(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeographyinst(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal instant
SELECT asewkt(tgeographyi(tgeography '[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03]'));
ERROR:  Cannot transform input to a temporal instant set
SELECT asewkt(tgeographyi(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal instant set
SELECT asewkt(tgeographyseq(tgeography '{Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03}'));
ERROR:  Cannot transform input to a temporal sequence
SELECT asewkt(tgeographyseq(tgeography '{[Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-01, Polygon((5 5, 6 5, 6 6, 5 6, 5 5))@2000-01-02, Polygon((0 0, 1 0, 1 1, 0 1, 0 0))@2000-01-03],[Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-04, Polygon((4 3, 4 4, 3 4, 3 3, 4 3))@2000-01-05]}'));
ERROR:  Cannot transform input to a temporal sequence
